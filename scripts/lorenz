#!/usr/bin/env python
# -*- coding: utf-8 -*-
# lorenz
# Copyright (c) 2020 Hugh Coleman
#
# This file is part of hughcoleman/lorenz, a historically accurate simulator of
# the Lorenz SZ40 Cipher Machine. It is released under the MIT License (see
# LICENSE.)
import argparse

import lorenz.machine
import lorenz.patterns
import lorenz.telegraphy

# import auxiliary devices

if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    # configure: machine operating mode
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument(
        "-e", "--encrypt", action="store_true", help="perform an encryption"
    )
    group.add_argument(
        "-d", "--decrypt", action="store_true", help="perform a decryption"
    )

    # configure: machine cipher settings
    parser.add_argument("-c", "--cams", help="set cam patterns")
    parser.add_argument("-p", "--positions", help="rotor positions in a ()")

    # configure: input stream
    parser.add_argument(
        "input",
        type=argparse.FileType("r"),
        help="input text to encrypt/decrypt",
    )

    args = parser.parse_args()

    # Create an instance of SZ40 with the supplied parameters.
    machine = lorenz.machine.SZ40(None)
